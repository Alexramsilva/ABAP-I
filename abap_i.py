# -*- coding: utf-8 -*-
"""ABAP-F.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NBmNSNM5_4DQe-6oFaiK8zMQcqCVAMgh
"""

import streamlit as st
import pandas as pd

# Datos iniciales (en memoria - podrías guardarlos en un CSV/SQLite para persistencia)
if 'catalogo_cuentas' not in st.session_state:
    st.session_state['catalogo_cuentas'] = pd.DataFrame(columns=['Código', 'Nombre', 'Tipo'])

if 'polizas' not in st.session_state:
    st.session_state['polizas'] = pd.DataFrame(columns=['Folio', 'Fecha', 'Concepto', 'Cuenta', 'Debe', 'Haber'])

if 'configuracion' not in st.session_state:
    st.session_state['configuracion'] = {
        "Empresa": "Mi Empresa S.A. de C.V.",
        "RFC": "XAXX010101000"
    }

# Menú lateral
menu = st.sidebar.selectbox("Menú", [
    "Inicio",
    "Catálogo de Cuentas",
    "Módulo de Pólizas",
    "Consultas (Auxiliares y Balanzas)",
    "Estado de Resultados",
    "Balance General",
    "Configuración"
])

# Módulo de Pólizas
if menu == "Módulo de Pólizas":
    st.title("Módulo de Pólizas")

    with st.form("Alta de Póliza"):
        folio = st.text_input("Folio")
        fecha = st.date_input("Fecha")
        concepto = st.text_input("Concepto")
        st.write("### Movimientos")

        movimientos = []
        for i in range(3):
            col1, col2, col3 = st.columns(3)
            cuenta = col1.selectbox(f"Cuenta {i+1}", st.session_state['catalogo_cuentas']['Código'].tolist(), index=None, placeholder="Selecciona una cuenta")
            debe = col2.number_input(f"Debe {i+1}", min_value=0.0, format="%.2f")
            haber = col3.number_input(f"Haber {i+1}", min_value=0.0, format="%.2f")
            movimientos.append((cuenta, debe, haber))

        submit = st.form_submit_button("Agregar Póliza")

        if submit:
            for cuenta, debe, haber in movimientos:
                if cuenta and (debe > 0 or haber > 0):
                    nueva_linea = pd.DataFrame([[folio, fecha, concepto, cuenta, debe, haber]],
                                               columns=['Folio', 'Fecha', 'Concepto', 'Cuenta', 'Debe', 'Haber'])
                    st.session_state['polizas'] = pd.concat([st.session_state['polizas'], nueva_linea], ignore_index=True)
            st.success("Póliza registrada correctamente")

    st.write("### Pólizas Registradas")
    if not st.session_state['polizas'].empty:
        for index, row in st.session_state['polizas'].iterrows():
            with st.expander(f"Folio: {row['Folio']} - {row['Fecha']}"):
                st.write(f"**Concepto:** {row['Concepto']}")
                st.write(f"**Cuenta:** {row['Cuenta']}")
                st.write(f"**Debe:** {row['Debe']:.2f}, **Haber:** {row['Haber']:.2f}")
                if st.button(f"Eliminar Póliza {row['Folio']}", key=f"del_{index}"):
                    st.session_state['polizas'].drop(index, inplace=True)
                    st.session_state['polizas'].reset_index(drop=True, inplace=True)
                    st.experimental_rerun()
    else:
        st.write("No hay pólizas registradas.")

    if st.button("Eliminar todas las pólizas"):
        st.session_state['polizas'] = pd.DataFrame(columns=['Folio', 'Fecha', 'Concepto', 'Cuenta', 'Debe', 'Haber'])
        st.warning("Se eliminaron todas las pólizas.")